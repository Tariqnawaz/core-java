import java.util.HashSet;
import java.util.Set;


public class HashCodeNEqualMethod {
	
	String panCard;
	int customerId;
	
	public HashCodeNEqualMethod(String s , int i){
		panCard = s;
		customerId = i;
	}
	
	public boolean equals(Object obj){
		
		if( !(obj instanceof HashCodeNEqualMethod))
			return false;
		
		if(obj == this)
			return true;
		
		HashCodeNEqualMethod h = (HashCodeNEqualMethod)obj;
		
		if(panCard.equals(h.panCard) && customerId == h.customerId)
			return true;
		 
		return false;
	}
	
	// Restriction to override hashCode method
	// whatever the properties / attribute i have considered in as part of equals method overriding I have to conside the same in hashcode overriding method
	public int hashCode(){
		return panCard.hashCode()+customerId;
	}
	
	public String toString(){
		return panCard + "   " + customerId;
	}
	public static void main(String[] args) {
		// if we have not overriding equal and hashcode method inside our class then the hashcode will be created by object class hashcode()
		HashCodeNEqualMethod firstObj = new HashCodeNEqualMethod("First Object", 101); // Here hashCode of this object is created by object class hashCode() , say 1121
		HashCodeNEqualMethod secondObj = new HashCodeNEqualMethod("First Object", 101); // Here hashCode of this object is created by object class hashCode() , say 5588
		
		//if overriding equal and hashCode method then hashCode will be generated by class hashcode method.
		System.out.println(firstObj.equals(secondObj));
		System.out.println(firstObj == secondObj);
		
		Set s = new HashSet(); // here set uses hashing relation technique to store element
		s.add(firstObj);
		s.add(secondObj);
		System.out.println(s);
		

	}

}
