SQL

Staff_ID  Role  Staff_name		Dept_Id  Salary 
1		  User	Nasir Khan	     1	    15000
2		  User	Wasim Akram		 2		18000
3		  User	Mohammad Sami    1		20000
4		  User	Usman Khawaja	 2		10000
5		  User	Mohammad Azhar   1		12000
6		  User	Zahir Khan		 1		40000
7		  User	Irfan Pathan	 3		15000
8		  User	Yusuf Pathan	 3		25000
9		  User	Nawab Patoadi	 1		20000

Dept_Id  Dept_Name
1		 Teacher
2		 Accounts
3		 Management

count total number of employee in each department
	select department_id ,COUNT(staff_id) as CountOfEmp from staff group by department_id

count total number of employee in each department . Display Department_id , Department Name and empCount
	select COUNT(s.staff_id),s.department_id , d.department_name from staff s , department d where s.department_id = d.department_id
	group by s.department_id , d.department_name

count total number of employee in each department . Display Department_id , Department Name and StaffName
	select s.department_id , d.department_name , s.staff_name from staff s , department d where s.department_id = d.department_id
	group by s.department_id , d.department_name , s.staff_name

Display number of staff whose salary is greater than 10000 in each department
	select COUNT(staff_id) , department_id from staff where salary > 7000 group by department_id

Display staff name , department name , salary from each department where salary is geater than 10000
	select s.staff_name , s.salary , d.department_name from staff s , department d where s.department_id = d.department_id and s.salary <= 10000
	group by d.department_name , s.staff_name ,s.salary


find second highest salary of Employee
	select MAX(salary) from staff  where salary not in (select MAX(salary) from staff)
	select MAX(salary) from staff  where salary < (select MAX(salary) from staff)
	select Top 1 salary from (select Top 2 salary from staff order by salary desc)as emp order by salary ASC
	SELECT salary  FROM (SELECT salary FROM staff ORDER BY salary DESC LIMIT 2) AS emp ORDER BY salary LIMIT 1 (only in mysql server)

find Max Salary from each department. And second query print max sal with department name
	select MAX(salary) , department_id from staff group by department_id;
	select MAX(s.salary) ,d.department_name    from staff s , department d where s.department_id = d.department_id 
	group by d.department_name;
	select d.department_name ,MAX(s.salary) from staff s right join  department d on s.department_id = d.department_id 
	group by d.department_name ;

Write SQL Query to display the current date.
	SELECT GetDate(); 

Write an SQL Query to check whether date passed to Query is the date of given format or not.
	SELECT  ISDATE('1/08/13') AS "MM/DD/YY"; 

Write an SQL Query to find an employee whose Salary is equal or greater than 10000.
	select staff_name from staff where salary > 10000

Write an SQL Query to find name of employee whose name Start with ‘M’
	SELECT * FROM staff WHERE staff_name like 'M%';

find all Employee records containing the word "Joe", regardless of whether it was stored as JOE, Joe, or joe.
	SELECT * from staff WHERE UPPER(staff_name) like '%sami%';

Write an SQL Query to find  the year from date.
	SELECT YEAR(GETDATE()) as "Year";

There is a table which contains two column Student and Marks, you need to find all the students, whose marks are greater 
than average marks i.e. list of above average students.
	SELECT staff_id,staff_name, salary from staff where salary > (SELECT AVG(salary) from staff)

Write the query to get the department and department wise total(sum) salary from "EmployeeDetail" table. and dispaly 
the ascending order of salary
	select department_id ,SUM(salary) as [TOTAL SUM] from staff group by department_id order by SUM(salary) ASC

Write the query to get the department, total no. of departments, total(sum) salary with respect to department from
staff table
	select s.department_id  , COUNT(s.department_id) , sum(s.salary)from staff s group by s.department_id;

Get department wise average salary from staff table order by salary ascending
	select department_id ,AVG(salary) from staff group by department_id order by AVG(salary)

Get department wise minimum salary from "EmployeeDetail" table order by salary ascending
	select department_id ,min(salary) from staff group by department_id order by min(salary)

find the second higest salary in each department
	select MAX(s.salary), s.department_id from staff s  where salary < (select MAX(s1.salary) from staff s1 
	where s.department_id = s1.department_id )
	group by s.department_id 
	
	select * from
	(
	select salary, department_id , Rank() over (Partition BY department_id order by salary DESC) as [Rank] from 
	STAFF
	) tmp
	where Rank = 2
	
	OR BY DENSE_RANK
	select * from
	(
	select salary, department_id , DENSE_RANK() over (Partition BY department_id order by salary DESC) as [Rank] from 
	STAFF
	) tmp
	where Rank = 2
	

find the third higest salary in each department.
	select max(s.salary) , s.DEPARTMENT_ID from STAFF s where 
	s.SALARY < (select MAX(s1.SALARY) from STAFF s1 where s.DEPARTMENT_ID = s1.DEPARTMENT_ID 
	and s1.SALARY < (select max(s2.SALARY) from STAFF s2 where s1.DEPARTMENT_ID = s2.DEPARTMENT_ID))
	group by s.DEPARTMENT_ID 
	
	
/***********************************joins*****************************************/
Left Join : Returns all values  from left table plus right table based on common field, If left table entry is not not present in right 
			table then its returns null values. 
	select * from STAFF s left join sales sa on s.STAFF_ID = sa.staff_id	
StaffId Role   Staff_Name          dept_id Salary  salesid Vendor  StaffId  Created_date
	1	User	Nasir Khan				1	15000	1		Mobile	1	    2016-05-01 15:55:22.670
	2	User	Wasim Akram				2	18000	NULL	NULL	NULL	NULL
	3	User	Mohammad Sami			1	20000	NULL	NULL	NULL	NULL
	4	User	Usman Khawaja			2	10000	NULL	NULL	NULL	NULL
	5	User	Mohammad Azhar-uddin	1	12000	2		TV		5	    2016-05-01 15:55:22.670
	
Right Join : Returns all values  from right table plus left table based on common field, If right table entry is not present in left 
			table then its returns null values.	

	select * from STAFF_TEMP s right join sales sa on s.STAFF_ID = sa.staff_id
StaffId Role   Staff_Name dept_id Salary  salesid Vendor  StaffId  Created_date	
	1	User   Nasir Javed	1		15000	1	  Mobile	1	2016-05-01 15:55:22.670
	NULL	NULL	NULL	NULL	NULL	2	  TV	    5	2016-05-01 15:55:22.670
	NULL	NULL	NULL	NULL	NULL	3	  Fan	    7	2016-05-01 15:55:22.670
	NULL	NULL	NULL	NULL	NULL	4	  AC	    9	2016-05-01 15:55:22.670
	
Full outer joins : It returns data from both table 

Inner joins : Inner joins returns data from both table , where there is a match between common column in both table.
	
/***********************************Sets*******************************************/
Union : Union is used to combine the result of two select statement and doesn't returns duplicate values.
		select * from STAFF_TEMP s inner join sales sa on s.STAFF_ID = sa.staff_id
		union
		select * from STAFF s inner join sales sa on s.STAFF_ID = sa.staff_id	

UnionAll :  Union is used to combine the result of two select statement and returns duplicate values.		
		select * from STAFF s inner join sales sa on s.STAFF_ID = sa.staff_id
		union all
		select * from STAFF_TEMP s inner join sales sa on s.STAFF_ID = sa.staff_id	
		
Intercept : Intercept is used to combine the two or more select statement and return all record from 1st table  which is common record in 
		second table		 		
		select s.STAFF_ID from STAFF s , sales sa where s.STAFF_ID = sa.staff_id
		Intersect
		select s.STAFF_ID from STAFF_TEMP s ,sales sa where s.STAFF_ID = sa.staff_id

Minus : Minus is used to combine the two or more select statement and returns all record from 1st table which is not present in second table
		select * from STAFF
		MINUS
		select * from STAFF_TEMP
				